// WARNING: auto-generated file
#include "diceenum.hh"
namespace dice {
std::vector< std::vector< std::pair<diceroll, double> > > MakeRollDists() {
  std::vector< std::vector< std::pair<diceroll, double> > > ret;
  {
    std::vector< std::pair<diceroll, double> > m;
    m.emplace_back(diceroll(1, 0, 0, 0, 0, 0), 0.166666666667);
    m.emplace_back(diceroll(0, 0, 1, 0, 0, 0), 0.166666666667);
    m.emplace_back(diceroll(0, 1, 0, 0, 0, 0), 0.166666666667);
    m.emplace_back(diceroll(0, 0, 0, 1, 0, 0), 0.166666666667);
    m.emplace_back(diceroll(0, 0, 0, 0, 0, 1), 0.166666666667);
    m.emplace_back(diceroll(0, 0, 0, 0, 1, 0), 0.166666666667);
    ret.emplace_back(m);
  }
  {
    std::vector< std::pair<diceroll, double> > m;
    m.emplace_back(diceroll(0, 0, 0, 0, 2, 0), 0.0277777777778);
    m.emplace_back(diceroll(1, 0, 1, 0, 0, 0), 0.0555555555556);
    m.emplace_back(diceroll(1, 0, 0, 0, 1, 0), 0.0555555555556);
    m.emplace_back(diceroll(0, 0, 1, 1, 0, 0), 0.0555555555556);
    m.emplace_back(diceroll(0, 0, 1, 0, 1, 0), 0.0555555555556);
    m.emplace_back(diceroll(1, 0, 0, 0, 0, 1), 0.0555555555556);
    m.emplace_back(diceroll(0, 1, 0, 0, 1, 0), 0.0555555555556);
    m.emplace_back(diceroll(0, 1, 1, 0, 0, 0), 0.0555555555556);
    m.emplace_back(diceroll(0, 0, 0, 2, 0, 0), 0.0277777777778);
    m.emplace_back(diceroll(0, 2, 0, 0, 0, 0), 0.0277777777778);
    m.emplace_back(diceroll(2, 0, 0, 0, 0, 0), 0.0277777777778);
    m.emplace_back(diceroll(0, 0, 0, 0, 1, 1), 0.0555555555556);
    m.emplace_back(diceroll(0, 0, 1, 0, 0, 1), 0.0555555555556);
    m.emplace_back(diceroll(1, 0, 0, 1, 0, 0), 0.0555555555556);
    m.emplace_back(diceroll(0, 0, 0, 1, 1, 0), 0.0555555555556);
    m.emplace_back(diceroll(0, 1, 0, 0, 0, 1), 0.0555555555556);
    m.emplace_back(diceroll(0, 0, 0, 1, 0, 1), 0.0555555555556);
    m.emplace_back(diceroll(0, 1, 0, 1, 0, 0), 0.0555555555556);
    m.emplace_back(diceroll(0, 0, 0, 0, 0, 2), 0.0277777777778);
    m.emplace_back(diceroll(1, 1, 0, 0, 0, 0), 0.0555555555556);
    m.emplace_back(diceroll(0, 0, 2, 0, 0, 0), 0.0277777777778);
    ret.emplace_back(m);
  }
  {
    std::vector< std::pair<diceroll, double> > m;
    m.emplace_back(diceroll(0, 1, 0, 1, 1, 0), 0.0277777777778);
    m.emplace_back(diceroll(1, 1, 0, 0, 1, 0), 0.0277777777778);
    m.emplace_back(diceroll(0, 2, 1, 0, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 0, 1, 2, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 0, 3, 0, 0), 0.00462962962963);
    m.emplace_back(diceroll(1, 0, 0, 1, 0, 1), 0.0277777777778);
    m.emplace_back(diceroll(1, 0, 0, 0, 2, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 0, 0, 1, 2), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 0, 2, 1, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 2, 0, 0, 1), 0.0138888888889);
    m.emplace_back(diceroll(3, 0, 0, 0, 0, 0), 0.00462962962963);
    m.emplace_back(diceroll(0, 1, 0, 2, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(1, 0, 0, 1, 1, 0), 0.0277777777778);
    m.emplace_back(diceroll(0, 0, 1, 0, 1, 1), 0.0277777777778);
    m.emplace_back(diceroll(0, 1, 1, 0, 0, 1), 0.0277777777778);
    m.emplace_back(diceroll(0, 0, 1, 1, 0, 1), 0.0277777777778);
    m.emplace_back(diceroll(0, 1, 0, 0, 2, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 0, 2, 0, 1), 0.0138888888889);
    m.emplace_back(diceroll(0, 1, 1, 1, 0, 0), 0.0277777777778);
    m.emplace_back(diceroll(0, 0, 2, 1, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 1, 1, 0, 1, 0), 0.0277777777778);
    m.emplace_back(diceroll(1, 2, 0, 0, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 2, 0, 1, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 1, 0, 0, 2), 0.0138888888889);
    m.emplace_back(diceroll(1, 0, 1, 1, 0, 0), 0.0277777777778);
    m.emplace_back(diceroll(1, 0, 2, 0, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(2, 0, 1, 0, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 2, 0, 1, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 0, 1, 1, 1), 0.0277777777778);
    m.emplace_back(diceroll(0, 0, 1, 1, 1, 0), 0.0277777777778);
    m.emplace_back(diceroll(0, 1, 2, 0, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 2, 0, 0, 1, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 2, 0, 0, 0, 1), 0.0138888888889);
    m.emplace_back(diceroll(1, 1, 1, 0, 0, 0), 0.0277777777778);
    m.emplace_back(diceroll(1, 0, 1, 0, 1, 0), 0.0277777777778);
    m.emplace_back(diceroll(0, 3, 0, 0, 0, 0), 0.00462962962963);
    m.emplace_back(diceroll(0, 1, 0, 0, 0, 2), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 0, 0, 3, 0), 0.00462962962963);
    m.emplace_back(diceroll(0, 0, 0, 0, 0, 3), 0.00462962962963);
    m.emplace_back(diceroll(0, 0, 1, 2, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(1, 0, 0, 0, 0, 2), 0.0138888888889);
    m.emplace_back(diceroll(0, 0, 0, 1, 0, 2), 0.0138888888889);
    m.emplace_back(diceroll(1, 0, 1, 0, 0, 1), 0.0277777777778);
    m.emplace_back(diceroll(0, 0, 1, 0, 2, 0), 0.0138888888889);
    m.emplace_back(diceroll(1, 0, 0, 2, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(0, 1, 0, 0, 1, 1), 0.0277777777778);
    m.emplace_back(diceroll(2, 0, 0, 1, 0, 0), 0.0138888888889);
    m.emplace_back(diceroll(2, 0, 0, 0, 0, 1), 0.0138888888889);
    m.emplace_back(diceroll(1, 1, 0, 1, 0, 0), 0.0277777777778);
    m.emplace_back(diceroll(0, 1, 0, 1, 0, 1), 0.0277777777778);
    m.emplace_back(diceroll(0, 0, 3, 0, 0, 0), 0.00462962962963);
    m.emplace_back(diceroll(1, 1, 0, 0, 0, 1), 0.0277777777778);
    m.emplace_back(diceroll(2, 0, 0, 0, 1, 0), 0.0138888888889);
    m.emplace_back(diceroll(1, 0, 0, 0, 1, 1), 0.0277777777778);
    m.emplace_back(diceroll(0, 0, 0, 0, 2, 1), 0.0138888888889);
    m.emplace_back(diceroll(2, 1, 0, 0, 0, 0), 0.0138888888889);
    ret.emplace_back(m);
  }
  {
    std::vector< std::pair<diceroll, double> > m;
    m.emplace_back(diceroll(1, 0, 0, 1, 1, 1), 0.0185185185185);
    m.emplace_back(diceroll(0, 1, 0, 3, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 1, 0, 0, 2, 1), 0.00925925925926);
    m.emplace_back(diceroll(1, 1, 2, 0, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 1, 1, 1, 0), 0.0185185185185);
    m.emplace_back(diceroll(3, 0, 0, 1, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(1, 2, 0, 1, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(1, 1, 1, 0, 1, 0), 0.0185185185185);
    m.emplace_back(diceroll(0, 3, 0, 0, 1, 0), 0.00308641975309);
    m.emplace_back(diceroll(1, 0, 0, 0, 3, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 1, 0, 1, 2, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 2, 0, 0, 1, 1), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 0, 2, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(2, 0, 0, 0, 1, 1), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 0, 0, 4, 0), 0.000771604938272);
    m.emplace_back(diceroll(1, 0, 0, 0, 2, 1), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 0, 1, 0, 2), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 1, 0, 0, 3), 0.00308641975309);
    m.emplace_back(diceroll(2, 0, 0, 1, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 1, 0, 1, 2), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 3, 0, 1, 0), 0.00308641975309);
    m.emplace_back(diceroll(1, 1, 0, 1, 0, 1), 0.0185185185185);
    m.emplace_back(diceroll(0, 0, 0, 3, 1, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 1, 0, 1, 1, 1), 0.0185185185185);
    m.emplace_back(diceroll(0, 2, 0, 0, 0, 2), 0.00462962962963);
    m.emplace_back(diceroll(0, 2, 1, 0, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(2, 0, 1, 0, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 1, 1, 1, 1, 0), 0.0185185185185);
    m.emplace_back(diceroll(2, 1, 0, 1, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(2, 0, 0, 1, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 1, 1, 0, 1, 1), 0.0185185185185);
    m.emplace_back(diceroll(0, 1, 0, 2, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(2, 0, 0, 0, 2, 0), 0.00462962962963);
    m.emplace_back(diceroll(1, 1, 0, 0, 2, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 0, 0, 3, 1), 0.00308641975309);
    m.emplace_back(diceroll(0, 0, 2, 1, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(1, 2, 0, 0, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 2, 1, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(2, 0, 0, 2, 0, 0), 0.00462962962963);
    m.emplace_back(diceroll(0, 0, 2, 0, 2, 0), 0.00462962962963);
    m.emplace_back(diceroll(0, 1, 2, 1, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(3, 0, 1, 0, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 1, 1, 2, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(1, 1, 0, 2, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 0, 2, 2, 0), 0.00462962962963);
    m.emplace_back(diceroll(1, 0, 0, 0, 0, 3), 0.00308641975309);
    m.emplace_back(diceroll(0, 0, 1, 3, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(1, 1, 0, 1, 1, 0), 0.0185185185185);
    m.emplace_back(diceroll(0, 0, 1, 0, 2, 1), 0.00925925925926);
    m.emplace_back(diceroll(1, 2, 1, 0, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 2, 2, 0, 0, 0), 0.00462962962963);
    m.emplace_back(diceroll(0, 1, 1, 0, 2, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 2, 1, 0, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 0, 0, 2, 2), 0.00462962962963);
    m.emplace_back(diceroll(0, 1, 0, 0, 3, 0), 0.00308641975309);
    m.emplace_back(diceroll(2, 1, 0, 0, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 2, 2, 0, 0), 0.00462962962963);
    m.emplace_back(diceroll(1, 0, 1, 0, 0, 2), 0.00925925925926);
    m.emplace_back(diceroll(3, 0, 0, 0, 1, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 1, 0, 2, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 1, 1, 1, 1), 0.0185185185185);
    m.emplace_back(diceroll(0, 4, 0, 0, 0, 0), 0.000771604938272);
    m.emplace_back(diceroll(3, 1, 0, 0, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 0, 0, 1, 1, 2), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 2, 1, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(1, 2, 0, 0, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 1, 0, 1, 0, 2), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 1, 1, 2, 0), 0.00925925925926);
    m.emplace_back(diceroll(2, 1, 1, 0, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 2, 0, 1, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 2, 0, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(0, 1, 1, 1, 0, 1), 0.0185185185185);
    m.emplace_back(diceroll(2, 0, 1, 1, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 0, 1, 2, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 1, 2, 0, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(1, 1, 1, 1, 0, 0), 0.0185185185185);
    m.emplace_back(diceroll(0, 3, 0, 1, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 0, 1, 0, 3, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 0, 0, 2, 0, 2), 0.00462962962963);
    m.emplace_back(diceroll(0, 0, 1, 2, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 0, 3, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 2, 0, 0, 2, 0), 0.00462962962963);
    m.emplace_back(diceroll(0, 0, 0, 1, 3, 0), 0.00308641975309);
    m.emplace_back(diceroll(2, 1, 0, 0, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 1, 3, 0, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(4, 0, 0, 0, 0, 0), 0.000771604938272);
    m.emplace_back(diceroll(0, 0, 3, 1, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(1, 1, 0, 0, 1, 1), 0.0185185185185);
    m.emplace_back(diceroll(0, 0, 0, 4, 0, 0), 0.000771604938272);
    m.emplace_back(diceroll(0, 0, 0, 1, 2, 1), 0.00925925925926);
    m.emplace_back(diceroll(0, 2, 0, 2, 0, 0), 0.00462962962963);
    m.emplace_back(diceroll(2, 2, 0, 0, 0, 0), 0.00462962962963);
    m.emplace_back(diceroll(1, 0, 1, 0, 1, 1), 0.0185185185185);
    m.emplace_back(diceroll(1, 3, 0, 0, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 1, 0, 0, 0, 3), 0.00308641975309);
    m.emplace_back(diceroll(0, 2, 0, 1, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 2, 0, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 0, 0, 1, 2), 0.00925925925926);
    m.emplace_back(diceroll(0, 1, 0, 0, 1, 2), 0.00925925925926);
    m.emplace_back(diceroll(0, 1, 2, 0, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 1, 1, 0, 1), 0.0185185185185);
    m.emplace_back(diceroll(2, 0, 0, 0, 0, 2), 0.00462962962963);
    m.emplace_back(diceroll(2, 0, 1, 0, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 2, 0, 1, 1), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 0, 1, 0, 3), 0.00308641975309);
    m.emplace_back(diceroll(1, 1, 0, 0, 0, 2), 0.00925925925926);
    m.emplace_back(diceroll(1, 1, 1, 0, 0, 1), 0.0185185185185);
    m.emplace_back(diceroll(0, 0, 1, 2, 1, 0), 0.00925925925926);
    m.emplace_back(diceroll(0, 3, 0, 0, 0, 1), 0.00308641975309);
    m.emplace_back(diceroll(0, 0, 0, 2, 1, 1), 0.00925925925926);
    m.emplace_back(diceroll(0, 1, 1, 0, 0, 2), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 0, 0, 1, 3), 0.00308641975309);
    m.emplace_back(diceroll(1, 0, 0, 2, 0, 1), 0.00925925925926);
    m.emplace_back(diceroll(0, 0, 1, 1, 0, 2), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 1, 0, 2, 0), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 3, 0, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(3, 0, 0, 0, 0, 1), 0.00308641975309);
    m.emplace_back(diceroll(0, 3, 1, 0, 0, 0), 0.00308641975309);
    m.emplace_back(diceroll(0, 0, 2, 0, 0, 2), 0.00462962962963);
    m.emplace_back(diceroll(0, 0, 3, 0, 0, 1), 0.00308641975309);
    m.emplace_back(diceroll(0, 0, 4, 0, 0, 0), 0.000771604938272);
    m.emplace_back(diceroll(0, 0, 0, 3, 0, 1), 0.00308641975309);
    m.emplace_back(diceroll(0, 0, 0, 0, 0, 4), 0.000771604938272);
    m.emplace_back(diceroll(0, 2, 1, 1, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(1, 0, 1, 2, 0, 0), 0.00925925925926);
    m.emplace_back(diceroll(2, 0, 2, 0, 0, 0), 0.00462962962963);
    ret.emplace_back(m);
  }
  {
    std::vector< std::pair<diceroll, double> > m;
    m.emplace_back(diceroll(3, 1, 0, 1, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 3, 0, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 0, 0, 0, 4), 0.000643004115226);
    m.emplace_back(diceroll(0, 2, 0, 3, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 2, 1, 1, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(2, 2, 0, 1, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(2, 1, 0, 1, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(1, 0, 0, 2, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(1, 3, 0, 1, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 2, 2, 0, 1), 0.00385802469136);
    m.emplace_back(diceroll(3, 0, 0, 1, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 0, 3, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(1, 1, 2, 0, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 3, 1, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(5, 0, 0, 0, 0, 0), 0.000128600823045);
    m.emplace_back(diceroll(1, 0, 1, 1, 1, 1), 0.0154320987654);
    m.emplace_back(diceroll(0, 2, 1, 2, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(2, 0, 0, 0, 3, 0), 0.00128600823045);
    m.emplace_back(diceroll(2, 0, 1, 0, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(1, 0, 1, 0, 0, 3), 0.00257201646091);
    m.emplace_back(diceroll(2, 0, 0, 1, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(1, 1, 0, 0, 3, 0), 0.00257201646091);
    m.emplace_back(diceroll(1, 1, 1, 0, 1, 1), 0.0154320987654);
    m.emplace_back(diceroll(0, 1, 2, 0, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 3, 0, 0, 1, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 0, 4, 1, 0), 0.000643004115226);
    m.emplace_back(diceroll(1, 1, 0, 1, 0, 2), 0.00771604938272);
    m.emplace_back(diceroll(0, 2, 2, 1, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 1, 0, 1, 2, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 1, 0, 0, 4, 0), 0.000643004115226);
    m.emplace_back(diceroll(1, 0, 2, 1, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(2, 1, 0, 0, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(2, 0, 0, 2, 1, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 1, 0, 1, 1, 2), 0.00771604938272);
    m.emplace_back(diceroll(1, 0, 0, 2, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 2, 1, 0, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(3, 0, 1, 0, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 1, 2, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(1, 1, 0, 2, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(1, 0, 0, 1, 0, 3), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 1, 1, 0, 2), 0.00771604938272);
    m.emplace_back(diceroll(0, 2, 0, 2, 0, 1), 0.00385802469136);
    m.emplace_back(diceroll(1, 0, 1, 2, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(1, 0, 2, 2, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 1, 0, 2, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(1, 0, 2, 1, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(3, 0, 2, 0, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 0, 1, 0, 1, 3), 0.00257201646091);
    m.emplace_back(diceroll(1, 2, 1, 0, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 3, 0, 1, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 2, 0, 0, 2, 1), 0.00385802469136);
    m.emplace_back(diceroll(0, 2, 2, 0, 1, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 0, 3, 1, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 3, 1, 1, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 2, 1, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(0, 1, 1, 0, 3, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 0, 0, 3, 2), 0.00128600823045);
    m.emplace_back(diceroll(0, 2, 0, 1, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 0, 0, 0, 5), 0.000128600823045);
    m.emplace_back(diceroll(2, 1, 0, 1, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 2, 0, 0, 0, 3), 0.00128600823045);
    m.emplace_back(diceroll(0, 0, 0, 0, 5, 0), 0.000128600823045);
    m.emplace_back(diceroll(1, 0, 0, 0, 2, 2), 0.00385802469136);
    m.emplace_back(diceroll(4, 1, 0, 0, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(3, 0, 0, 2, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 1, 1, 1, 1, 1), 0.0154320987654);
    m.emplace_back(diceroll(2, 0, 1, 2, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(2, 0, 2, 0, 0, 1), 0.00385802469136);
    m.emplace_back(diceroll(1, 0, 0, 2, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(2, 0, 2, 1, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 2, 0, 3, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 1, 1, 2, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 1, 0, 4, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(2, 0, 0, 0, 2, 1), 0.00385802469136);
    m.emplace_back(diceroll(0, 4, 0, 0, 1, 0), 0.000643004115226);
    m.emplace_back(diceroll(1, 1, 2, 1, 0, 0), 0.00771604938272);
    m.emplace_back(diceroll(2, 3, 0, 0, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(1, 0, 0, 0, 0, 4), 0.000643004115226);
    m.emplace_back(diceroll(1, 1, 0, 0, 2, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 1, 0, 2, 2), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 0, 4, 0, 1), 0.000643004115226);
    m.emplace_back(diceroll(0, 2, 3, 0, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 0, 1, 0, 4, 0), 0.000643004115226);
    m.emplace_back(diceroll(0, 0, 0, 1, 0, 4), 0.000643004115226);
    m.emplace_back(diceroll(2, 1, 1, 0, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(1, 0, 0, 0, 3, 1), 0.00257201646091);
    m.emplace_back(diceroll(2, 0, 0, 2, 0, 1), 0.00385802469136);
    m.emplace_back(diceroll(0, 2, 0, 0, 1, 2), 0.00385802469136);
    m.emplace_back(diceroll(0, 1, 2, 1, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(3, 0, 1, 0, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(1, 1, 0, 2, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(3, 0, 0, 0, 0, 2), 0.00128600823045);
    m.emplace_back(diceroll(2, 1, 0, 0, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(1, 0, 0, 1, 3, 0), 0.00257201646091);
    m.emplace_back(diceroll(2, 1, 1, 1, 0, 0), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 0, 0, 2, 3), 0.00128600823045);
    m.emplace_back(diceroll(0, 0, 3, 2, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 1, 1, 1, 2, 0), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 4, 0, 0, 1), 0.000643004115226);
    m.emplace_back(diceroll(0, 0, 0, 1, 1, 3), 0.00257201646091);
    m.emplace_back(diceroll(2, 0, 0, 1, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 5, 0, 0, 0, 0), 0.000128600823045);
    m.emplace_back(diceroll(0, 0, 1, 3, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 3, 0, 1, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 0, 0, 4, 1), 0.000643004115226);
    m.emplace_back(diceroll(1, 2, 1, 0, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 5, 0, 0, 0), 0.000128600823045);
    m.emplace_back(diceroll(1, 2, 0, 0, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(1, 1, 0, 1, 1, 1), 0.0154320987654);
    m.emplace_back(diceroll(2, 0, 1, 1, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 4, 1, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(0, 1, 1, 0, 2, 1), 0.00771604938272);
    m.emplace_back(diceroll(3, 2, 0, 0, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(1, 0, 3, 0, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 2, 1, 0, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 2, 1, 0, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(1, 0, 1, 0, 1, 2), 0.00771604938272);
    m.emplace_back(diceroll(0, 1, 1, 0, 1, 2), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 2, 0, 2, 1), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 1, 1, 2, 1), 0.00771604938272);
    m.emplace_back(diceroll(1, 0, 2, 0, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 2, 0, 1, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(1, 0, 1, 1, 2, 0), 0.00771604938272);
    m.emplace_back(diceroll(4, 0, 0, 0, 1, 0), 0.000643004115226);
    m.emplace_back(diceroll(2, 0, 1, 0, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 0, 5, 0, 0), 0.000128600823045);
    m.emplace_back(diceroll(3, 0, 0, 0, 1, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 0, 2, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(1, 2, 2, 0, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 4, 0, 0, 0, 1), 0.000643004115226);
    m.emplace_back(diceroll(1, 1, 1, 1, 1, 0), 0.0154320987654);
    m.emplace_back(diceroll(3, 1, 0, 0, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(1, 1, 1, 0, 2, 0), 0.00771604938272);
    m.emplace_back(diceroll(0, 3, 0, 0, 2, 0), 0.00128600823045);
    m.emplace_back(diceroll(1, 0, 1, 1, 0, 2), 0.00771604938272);
    m.emplace_back(diceroll(0, 2, 0, 2, 1, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 2, 1, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(2, 2, 0, 0, 1, 0), 0.00385802469136);
    m.emplace_back(diceroll(1, 2, 0, 0, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 1, 2, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 0, 0, 1, 4), 0.000643004115226);
    m.emplace_back(diceroll(0, 1, 0, 1, 0, 3), 0.00257201646091);
    m.emplace_back(diceroll(1, 3, 0, 0, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(2, 1, 2, 0, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(2, 1, 1, 0, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 1, 1, 3, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 3, 1, 0, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(1, 2, 0, 1, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(2, 0, 0, 3, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(2, 0, 1, 1, 0, 1), 0.00771604938272);
    m.emplace_back(diceroll(1, 0, 0, 1, 2, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 4, 1, 0, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(3, 0, 1, 1, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 1, 3, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(1, 1, 0, 3, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(1, 0, 1, 3, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(3, 0, 0, 0, 2, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 0, 3, 0, 2, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 3, 0, 1, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 1, 0, 3, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 0, 2, 2, 1), 0.00385802469136);
    m.emplace_back(diceroll(3, 1, 1, 0, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 0, 1, 2, 2), 0.00385802469136);
    m.emplace_back(diceroll(0, 2, 2, 0, 0, 1), 0.00385802469136);
    m.emplace_back(diceroll(1, 2, 1, 1, 0, 0), 0.00771604938272);
    m.emplace_back(diceroll(1, 0, 0, 4, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(2, 2, 1, 0, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 1, 2, 0, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(1, 2, 0, 0, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(1, 0, 0, 3, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 0, 3, 0, 2), 0.00128600823045);
    m.emplace_back(diceroll(1, 0, 4, 0, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(1, 0, 3, 0, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(1, 0, 2, 0, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(1, 3, 1, 0, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 2, 2, 1, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 3, 0, 0, 2), 0.00128600823045);
    m.emplace_back(diceroll(2, 1, 0, 0, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 1, 0, 2, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 1, 3, 0, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 0, 1, 4, 0), 0.000643004115226);
    m.emplace_back(diceroll(4, 0, 0, 0, 0, 1), 0.000643004115226);
    m.emplace_back(diceroll(0, 1, 0, 0, 3, 1), 0.00257201646091);
    m.emplace_back(diceroll(1, 0, 1, 0, 3, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 2, 3, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 0, 3, 1, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(3, 1, 0, 0, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 2, 2, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(2, 0, 1, 0, 0, 2), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 1, 3, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 4, 0, 1, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(0, 0, 4, 0, 1, 0), 0.000643004115226);
    m.emplace_back(diceroll(2, 2, 0, 0, 0, 1), 0.00385802469136);
    m.emplace_back(diceroll(0, 2, 1, 1, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(1, 1, 1, 0, 0, 2), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 2, 0, 1, 2), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 1, 1, 1, 2), 0.00771604938272);
    m.emplace_back(diceroll(0, 3, 0, 0, 0, 2), 0.00128600823045);
    m.emplace_back(diceroll(1, 3, 0, 0, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 1, 0, 0, 4), 0.000643004115226);
    m.emplace_back(diceroll(1, 0, 1, 2, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(0, 2, 0, 1, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 0, 2, 1, 2), 0.00385802469136);
    m.emplace_back(diceroll(2, 0, 2, 0, 1, 0), 0.00385802469136);
    m.emplace_back(diceroll(1, 1, 1, 2, 0, 0), 0.00771604938272);
    m.emplace_back(diceroll(3, 0, 0, 1, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 0, 3, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(1, 0, 0, 3, 1, 0), 0.00257201646091);
    m.emplace_back(diceroll(1, 0, 0, 0, 1, 3), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 0, 0, 1, 3), 0.00257201646091);
    m.emplace_back(diceroll(4, 0, 1, 0, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(1, 1, 2, 0, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(2, 0, 0, 1, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(1, 1, 0, 0, 1, 2), 0.00771604938272);
    m.emplace_back(diceroll(2, 0, 0, 0, 0, 3), 0.00128600823045);
    m.emplace_back(diceroll(4, 0, 0, 1, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(0, 0, 0, 2, 0, 3), 0.00128600823045);
    m.emplace_back(diceroll(1, 1, 1, 1, 0, 1), 0.0154320987654);
    m.emplace_back(diceroll(1, 4, 0, 0, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(1, 1, 0, 1, 2, 0), 0.00771604938272);
    m.emplace_back(diceroll(0, 3, 0, 2, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(1, 2, 0, 1, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(1, 1, 0, 0, 0, 3), 0.00257201646091);
    m.emplace_back(diceroll(0, 2, 0, 0, 3, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 0, 0, 2, 3, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 0, 1, 2, 1, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 1, 4, 0, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(0, 1, 0, 1, 3, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 2, 1, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 1, 1, 0, 0, 3), 0.00257201646091);
    m.emplace_back(diceroll(2, 1, 0, 2, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(1, 0, 0, 1, 1, 2), 0.00771604938272);
    m.emplace_back(diceroll(0, 0, 1, 4, 0, 0), 0.000643004115226);
    m.emplace_back(diceroll(0, 0, 1, 2, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(1, 2, 0, 2, 0, 0), 0.00385802469136);
    m.emplace_back(diceroll(0, 0, 0, 3, 2, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 0, 1, 1, 0, 3), 0.00257201646091);
    m.emplace_back(diceroll(1, 0, 3, 1, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(1, 0, 0, 0, 4, 0), 0.000643004115226);
    m.emplace_back(diceroll(2, 0, 3, 0, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 0, 0, 1, 3, 1), 0.00257201646091);
    m.emplace_back(diceroll(1, 0, 2, 0, 2, 0), 0.00385802469136);
    m.emplace_back(diceroll(1, 0, 1, 0, 2, 1), 0.00771604938272);
    m.emplace_back(diceroll(0, 1, 3, 1, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 1, 0, 0, 2, 2), 0.00385802469136);
    m.emplace_back(diceroll(1, 1, 3, 0, 0, 0), 0.00257201646091);
    m.emplace_back(diceroll(0, 3, 2, 0, 0, 0), 0.00128600823045);
    m.emplace_back(diceroll(0, 1, 2, 1, 1, 0), 0.00771604938272);
    m.emplace_back(diceroll(0, 3, 1, 0, 0, 1), 0.00257201646091);
    m.emplace_back(diceroll(0, 0, 2, 0, 0, 3), 0.00128600823045);
    m.emplace_back(diceroll(2, 0, 0, 0, 1, 2), 0.00385802469136);
    m.emplace_back(diceroll(0, 1, 2, 0, 0, 2), 0.00385802469136);
    ret.emplace_back(m);
  }
  return ret;
}
} // namespace dice
